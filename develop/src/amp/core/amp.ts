;
(function (root) {

  //'use strict';


  /*======================================================================
   AMP基本設定
  ======================================================================*/

  // クラス基本設定
  var
  CLASS_NAME: string = 'Amp',
  VERSION   : string = '3.0';


  /*--------------------------------------------------------------------------
   config
  --------------------------------------------------------------------------*/

  // consoleがなければ空の関数を返す
  if (!('console' in root)) {
    root.console = {
      log: function (): void {
      }
    };
  }


  /*--------------------------------------------------------------------------
   @constructor
  --------------------------------------------------------------------------*/

  /**
   * Amp
   *
   * @class Amp
   * @constructor
   **/
  function Amp(className: string): void {
    if (typeof className === 'string') {
      this._name = className;
    }
  }



  /*----------------------------------------------------------------------
   @property
  ----------------------------------------------------------------------*/

  /**
   * バージョン情報
   *
   * @static
   * @property VERSION
   * @type {String}
   */
  (<any>Amp).VERSION = VERSION;


  /**
   * コンストラクタ名
   *
   * @private
   * @property name
   * @type {String}
   */
  Amp.prototype._name = CLASS_NAME;


  /*----------------------------------------------------------------------
   @method
  ----------------------------------------------------------------------*/

  /**
   * クラス名を返す
   *
   * @method toString
   * @return {String} クラス名を返す
   */
  Amp.prototype.toString = function(): string {
    return '[object ' + this._name + ']';
  };


  /*----------------------------------------------------------------------
   export
  ----------------------------------------------------------------------*/

  /**
   * AMP
   *
   * @module AMP
   **/
  root.AMP = new Amp(CLASS_NAME);
  root.AMP.Amp = Amp;


}(window));
